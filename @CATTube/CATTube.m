classdef CATTube < CAT
    
    % GUI for CAT
    %
    %
    
    % Martin Iggland, first version 2013-12-04
    
    properties
        
        % GUI handles and stuff
        gui
        
    end % properties
    
    methods
        
        %% Constructor method
        
        function O = CATTube(varargin)
            
            % Call CAT constructor
            O = O@CAT( varargin{:} );
            
            % Start constructing GUI
            
            % Initialise the main GUI, define all buttons and graphics
            % objects
            
            %
            % Initialise the GUI
            %
            % Create the figure handle
            O.gui.fighandle = figure(...
                'MenuBar','none',...
                'Name','Looking at CATs',...
                'NumberTitle','off',...
                'Position',[200 200 1050 445],...
                'Resize','off');
            
            % Create GUI ui controls
            
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            % Initial conditions
            %
            
            % Panel for initial conditions
            O.gui.init.panel = uipanel('Parent',O.gui.fighandle,...
                'Title','Initial settings',...
                'Units','pixels',...
                'Position',[20 300 500 125]);
            
            % Distribution
            % Text
            O.gui.init.init_dist_text = uicontrol(O.gui.init.panel,...
                'Style','text',...
                'String','Initial distribution function [Dist.]',...
                'Position',[10 85 240 20]);
            % Input box
            O.gui.init.init_dist = uicontrol(O.gui.init.panel,...
                'Style','edit',...
                'String',data2str(O.init_dist),...
                'TooltipString','Enter the initial distribution',...
                'Position',[250 85 190 20]);
            % Browse button
            O.gui.init.init_dist_browse = uicontrol(O.gui.init.panel,...
                'Style','pushbutton',...
                'String','Browse',...
                'Value',0,...
                'Callback',@(hObject,eventdata)O.browseVars(hObject,eventdata,'init_dist',O.gui.init.init_dist),...
                'Position',[440 85 50 20]...
                );
            
            % Seed mass
            % Text
            O.gui.init.init_seed_text = uicontrol(O.gui.init.panel,...
                'Style','text',...
                'String','Seed mass [?]',...
                'Position',[10 60 240 20]);
            % Input box
            O.gui.init.init_seed = uicontrol(O.gui.init.panel,...
                'Style','edit',...
                'String',data2str(O.init_seed),...
                'TooltipString','Enter the seed mass in UNITS',...
                'Position',[250 60 190 20]);
            % Browse button
            O.gui.init.init_seed_browse = uicontrol(O.gui.init.panel,...
                'Style','pushbutton',...
                'String','Browse',...
                'Value',0,...
                'Callback',@(hObject,eventdata)O.browseVars(hObject,eventdata,'init_seed',O.gui.init.init_seed),...
                'Position',[440 60 50 20]...
                );
            
            % Mass medium (solvent + antisolvent?)
            % Text
            O.gui.init.init_massmedium_text = uicontrol(O.gui.init.panel,...
                'Style','text',...
                'String','Total solvent mass [?]',...
                'Position',[10 35 240 20]);
            % Input box
            O.gui.init.init_massmedium = uicontrol(O.gui.init.panel,...
                'Style','edit',...
                'String',data2str(O.init_massmedium),...
                'TooltipString','Enter the initial solvent mass in kg',...
                'Position',[250 35 190 20]);
            % Browse button
            O.gui.init.init_massmedium_browse = uicontrol(O.gui.init.panel,...
                'Style','pushbutton',...
                'String','Browse',...
                'Value',0,...
                'Callback',@(hObject,eventdata)O.browseVars(hObject,eventdata,'init_massmedium',O.gui.init.init_massmedium),...
                'Position',[440 35 50 20]...
                );
            
            % c0
            % Text
            O.gui.init.init_conc_text = uicontrol(O.gui.init.panel,...
                'Style','text',...
                'String','Initial concentration [?]',...
                'Position',[10 10 240 20]);
            % Input box
            O.gui.init.init_conc = uicontrol(O.gui.init.panel,...
                'Style','edit',...
                'String','',...
                'TooltipString','Enter the initial concentration in kg',...
                'Position',[250 10 190 20]);
            % Browse button
            O.gui.init.init_conc_browse = uicontrol(O.gui.init.panel,...
                'Style','pushbutton',...
                'String','Browse',...
                'Value',0,...
                'Callback',@(hObject,eventdata)O.browseVars(hObject,eventdata,'init_conc',O.gui.init.init_conc),...
                'Position',[440 10 50 20]...
                );
            
            
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            % Process
            %
            
            % Panel for process settings
            O.gui.proc.panel = uipanel('Parent',O.gui.fighandle,...
                'Title','Process settings',...
                'Units','pixels',...
                'Position',[20 215 500 75]);
            
            % Tprofile
            % Text
            O.gui.proc.Tprofile_text = uicontrol(O.gui.proc.panel,...
                'Style','text',...
                'String','Temperature profile [?]',...
                'Position',[10 35 240 20]);
            % Input box
            O.gui.proc.Tprofile = uicontrol(O.gui.proc.panel,...
                'Style','edit',...
                'String',data2str(O.Tprofile),...
                'TooltipString','Enter the temperature profile: temperatures as a function of time (an. function; or table)',...
                'Position',[250 35 190 20]);
            % Browse button
            O.gui.proc.Tprofile_browse = uicontrol(O.gui.proc.panel,...
                'Style','pushbutton',...
                'String','Browse',...
                'Value',0,...
                'Callback',@(hObject,eventdata)O.browseVars(hObject,eventdata,'Tprofile',O.gui.proc.Tprofile),...
                'Position',[440 35 50 20]...
                );
            
            % ASprofile
            % Text
            O.gui.proc.ASprofile_text = uicontrol(O.gui.proc.panel,...
                'Style','text',...
                'String','Antisolvent profile [?]',...
                'Position',[10 10 240 20]);
            % Input box
            O.gui.proc.ASprofile = uicontrol(O.gui.proc.panel,...
                'Style','edit',...
                'String',data2str(O.ASprofile),...
                'TooltipString','Enter the antisolvent profile: mass added as a function of time (an. function; or table)',...
                'Position',[250 10 240 20]);
            % Browse button
            O.gui.proc.ASprofile_browse = uicontrol(O.gui.proc.panel,...
                'Style','pushbutton',...
                'String','Browse',...
                'Value',0,...
                'Callback',@(hObject,eventdata)O.browseVars(hObject,eventdata,'ASprofile',O.gui.proc.ASprofile),...
                'Position',[440 10 50 20]...
                );
            
            
            
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            % Thermodynamics
            %
            
            % Panel for thermodynamics settings
            O.gui.td.panel = uipanel('Parent',O.gui.fighandle,...
                'Title','Thermodynamics and substance properties',...
                'Units','pixels',...
                'Position',[20 105 500 100]);
            
            % Solubility
            O.gui.td.sol_text = uicontrol(O.gui.td.panel,...
                'Style','text',...
                'String','Solubility function: @(T)',...
                'Position',[10 60 240 20]);
            
            % Input box
            O.gui.td.sol_in = uicontrol(O.gui.td.panel,...
                'Style','edit',...
                'String','',...
                'TooltipString','Enter the set point temperature',...
                'Position',[250 60 240 20]);
            
            % rhoc
            O.gui.td.rho_text = uicontrol(O.gui.td.panel,...
                'Style','text',...
                'String','Solid density [?]',...
                'Position',[10 35 240 20]);
            
            % Input box
            O.gui.td.rho_in = uicontrol(O.gui.td.panel,...
                'Style','edit',...
                'String','',...
                'TooltipString','Enter the solid density',...
                'Position',[250 35 240 20]);
            
            % kv
            O.gui.td.kv_text = uicontrol(O.gui.td.panel,...
                'Style','text',...
                'String','Shape factor [0-1]',...
                'Position',[10 10 240 20]);
            
            % Input box
            O.gui.td.kv_in = uicontrol(O.gui.td.panel,...
                'Style','edit',...
                'String','1',...
                'TooltipString','Enter the shape factor',...
                'Position',[250 10 240 20]);
            
            
            
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            % Kinetics
            %
            
            % Panel for kinetics settings
            O.gui.kin.panel = uipanel('Parent',O.gui.fighandle,...
                'Title','Kinetics',...
                'Units','pixels',...
                'Position',[20 20 500 75]);
            
            % rhoc
            O.gui.kin.G_text = uicontrol(O.gui.kin.panel,...
                'Style','text',...
                'String','Growth rate',...
                'Position',[10 35 240 20]);
            
            % Input box
            O.gui.kin.G_in = uicontrol(O.gui.kin.panel,...
                'Style','edit',...
                'String','',...
                'TooltipString','Growth rate as a function of ..., in units of [m/s]',...
                'Position',[250 35 240 20]);
            
            % kv
            O.gui.kin.J_text = uicontrol(O.gui.kin.panel,...
                'Style','text',...
                'String','Nucleation rate',...
                'Position',[10 10 240 20]);
            
            % Input box
            O.gui.kin.J_in = uicontrol(O.gui.kin.panel,...
                'Style','edit',...
                'String','',...
                'TooltipString','Nucleation rate as a function of ..., in units of [1/s]',...
                'Position',[250 10 240 20]);
            
            
            
            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            % Solver
            %
            
            % Panel for solver settings
            O.gui.solv.panel = uipanel('Parent',O.gui.fighandle,...
                'Title','Solver settings',...
                'Units','pixels',...
                'Position',[530 325 500 100]);
            
            % Time
            O.gui.solv.time_text = uicontrol(O.gui.solv.panel,...
                'Style','text',...
                'String','Time',...
                'Position',[10 60 240 20]);
            
            % Input box
            O.gui.solv.time_in = uicontrol(O.gui.solv.panel,...
                'Style','edit',...
                'String','',...
                'TooltipString','Solver time, in seconds',...
                'Position',[250 60 240 20]);
            
            % Solution method
            O.gui.solv.method_text = uicontrol(O.gui.solv.panel,...
                'Style','text',...
                'String','Solution method',...
                'Position',[10 35 240 20]);
            
            % Input box
            O.gui.solv.method_in = uicontrol(O.gui.solv.panel,...
                'Style','popup',...
                'String','Central differences|Fixed pivot|Hires',...
                'TooltipString','Choose which method to use',...
                'Position',[250 35 240 20]);
            
            % Time
            O.gui.solv.opts_text = uicontrol(O.gui.solv.panel,...
                'Style','text',...
                'String','Options',...
                'Position',[10 10 240 20]);
            
%             % Input box
%             O.gui.solv.time_in = uicontrol(O.gui.solv.panel,...
%                 'Style','edit',...
%                 'String','',...
%                 'TooltipString','Solver time, in seconds',...
%                 'Position',[250 10 240 20]);
            


            %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
            % Run panel
            %
            
            % Panel for running programs
            O.gui.run.panel = uipanel('Parent',O.gui.fighandle,...
                'Title','Run',...
                'Units','pixels',...
                'Position',[530 20 500 295]);
            
            % Solve button
            O.gui.run.start = uicontrol(O.gui.run.panel,...
                'Style','pushbutton',...
                'String','Solve',...
                'Value',0,...
                'Callback','',...
                'Position',[20 180 450 30]...
                );
            
            % Write to file button
            O.gui.run.start = uicontrol(O.gui.run.panel,...
                'Style','pushbutton',...
                'String','Write settings to file',...
                'Value',0,...
                'Callback','',...
                'Position',[20 140 450 30]...
                );
            
            % Plot button
            O.gui.run.start = uicontrol(O.gui.run.panel,...
                'Style','pushbutton',...
                'String','Plot results',...
                'Value',0,...
                'Callback','',...
                'Position',[20 100 450 30]...
                );
            
        end % function
        
        %% Method browseVars
        
        function browseVars(O,~,~,classvarname,displayfield)
            
            % BrowseVars is a callback function called when a browse button is pressed
            % next to a variable input box. It lists the variables in the workspace and
            % allows the choice of one
            % Assign the chosen variable to the variable in the class
            
            % Create a new window for the list
            glb.fighandle = figure(...
                'MenuBar','none',...
                'Name','Import a variable',...
                'NumberTitle','off',...
                'Position',[200 200 400 400],...
                'Resize','off');
            
            % Create a list box
            glb.lbox = uicontrol(glb.fighandle,...
                'Style','listbox',...
                'String','',...
                'Max',1,...
                'Min',0,...
                'Units','pixels',...
                'Callback',@(hObject,Event)varDetails(hObject,Event),...
                'Position',[10 10 260 380]);
            
            % Update its contents
            glb.V = getVarList;
            updateVarList();
            
            % Create import button
            glb.import = uicontrol(glb.fighandle,...
                'Style','pushbutton',...
                'String','Import',...
                'Units','pixels',...
                'Callback',@(hObject,Event)setVar(hObject,Event),...
                'Position',[280 360 110 30]);
            
            % Create text box for variable details
            glb.text = uicontrol(glb.fighandle,...
                'Style','text',...
                'String','',...
                'Units','pixels',...
                'BackgroundColor',get(glb.fighandle,'Color'),...
                'Position',[280 320 110 30]);
            
            % Create refresh button
            glb.import = uicontrol(glb.fighandle,...
                'Style','pushbutton',...
                'String','Refresh',...
                'Units','pixels',...
                'Callback',@(hObject,Event)updateVarList(hObject,Event),...
                'Position',[280 260 110 30]);
            
            function V = getVarList
                
                % Get variable list
                V = evalin('base','whos');
                % Remove all variables which are CATTube objects
                V = V(~strcmp([{V.class}'],'CATTube')); %#ok<NBRAK>
                
            end % function getVarList
            
            function updateVarList(~,~)
                
                glb.V = getVarList;
                
                varnames = [{glb.V.name}']; %#ok<NBRAK>
                
                set(glb.lbox,'String',varnames);
                
            end % function updateVarList
            
            function varDetails(hObject,~)
                
                % Find selected variable
                varnum = get(hObject,'Value');
                
                % Make string for description of this variable
                % Output something like:
                % a
                % 2x3 double
                
                vname = sprintf('%s\n',glb.V(varnum).name);
                if length(glb.V(varnum).size) == 2
                        vsize = sprintf('%ix%i',glb.V(varnum).size);
                else %multidimensional
                    vsize = sprintf('%ix%ix...',glb.V(varnum).size(1:2));
                end % if else
                
                vtext = sprintf('%s %s %s',vname,vsize,glb.V(varnum).class);
                
                % Print variable details
                set(glb.text,'String',vtext)
                
            end % function
            
            function setVar(hObject,~)
                
                % Get the chosen variable number
                varnum = get(glb.lbox,'Value');
                
                % Assign the corresponding CAT variable to the chosen variable
                % Get variable data
                if varnum <= length(glb.V)
                    vardata = evalin('base',[glb.V(varnum).name]);
                    set(O,classvarname,vardata);
                    
                    % Close the variable list window
                    close(get(hObject,'Parent'))
                    
                    % Update the field for the current variable
                    set(displayfield,'String',data2str(vardata));
                    
                end % if
                
            end % function
            
        end % function
        
        
    end % methods
    
end % classdef